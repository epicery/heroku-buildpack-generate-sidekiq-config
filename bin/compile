#!/bin/sh

# change the current working directory to BUILD_DIR
# see: https://devcenter.heroku.com/articles/buildpack-api#bin-compile
BUILD_DIR=$1
ENV_DIR=$3

cd $BUILD_DIR

indent() {
  sed -u 's/^/       /'
}

# Ensure the app's environment is loaded so that
# the rake task will get executed in "production".
# This requires the presence of RAILS_ENV="production"
# in the settings of said app.
if [ -d $ENV_DIR ]; then
  for e in $(ls $ENV_DIR); do
    export "$e=$(cat $ENV_DIR/$e)"
  done
fi

TASK="heroku:generate-sidekiq-config"

# Execute the rake task "heroku:generate-sidekiq-config"
# if it exists.
if rake -T heroku:generate-sidekiq-config | grep -q "rake"; then
  echo "-----> Found the rake task \"$TASK\""
  echo "running \`bundle exec rake $TASK\`" | indent

  bundle exec rake "$TASK"
fi

FILE="./.heroku/sidekiq.yml"

# Abort the deploy if no Sidekiq config file is found under "./.heroku".
if [ -f $FILE ]; then
  echo "-----> Found the sidekiq config file: \"$FILE\""
  echo "declaring a worker process for background jobs..." | indent
  exit 0
else
  echo "!!!!!! No Sidekiq config file found"
  echo "please create one at \"$FILE\", either manually or dynamically by implementing a rake task named \"$TASK\"" | indent
  echo "aborting deploy..." | indent
  exit 1
fi
